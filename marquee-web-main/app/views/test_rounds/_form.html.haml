= form_for [@project, @test_round] do |f|
  -if @test_round.errors.any?
    #error_explanation
      - @test_round.errors.messages.each do |attr, msg|
        %span.help-inline{:id => "test_round_#{attr}"}= msg[0]
  %fieldset
    %legend New Test Round
    .clearfix
      = f.label :test_object
      .required *
      .input
        = f.text_field :test_object, :class => "validate[required, funcCall[checkOnlySpace]]"
    .clearfix
      = f.label :test_suite
      .required *
      .input
        = f.select :test_suite_id, options_from_collection_for_select(@project.test_suites, :id, :name), {}, {:class => "chzn-select, validate[required]"}
    .clearfix
      = f.label :test_environment
      .required *
      .input
        = f.select :test_environment_id, options_from_collection_for_select(TestEnvironment.all, :id, :name), {}, {:class => "chzn-select, validate[required]"}
    .clearfix
      = f.label :operation_system
      .required *
      .input
        = f.select :operation_system_id, options_from_collection_for_select(@project.operation_systems, :id, :name_with_version), {}, {:class => "chzn-select, validate[required]"}
    .clearfix
      = f.label :browser
      .required *
      .input
        = f.select :browser_id, options_from_collection_for_select(@project.browsers, :id, :name_with_version), {}, {:class => "chzn-select, validate[required]"}
    = f.hidden_field :creator_id, :value => current_user.id
    .actions
      = f.submit 'Schedule!', :class => 'btn primary', :id => 'schedule_commit_button'
      = link_to 'Back', project_test_rounds_path, :class => 'btn'

:javascript
  $(function(){
    $("#new_test_round").validationEngine({promptPosition: "bottomRight", scroll: false});
    $("#schedule_commit_button").click(function(){
      $(this).addClass("disabled");
    });
  });
