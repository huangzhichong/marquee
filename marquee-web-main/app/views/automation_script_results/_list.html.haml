.page-header.detail
  %h3 Automation Script Results
  = form_for search, :url => test_round_automation_script_results_path(test_round), :remote => true do |f|
    %span.search
      = f.text_field :automation_script_name_or_state_or_automation_script_version_or_triage_result_or_automation_script_owner_email_contains, {:id => 'search'}
      = f.submit '', {:class => 'btn', :id => 'searchsubmit'}

%table.zebra-striped
  %tr
    %th=sort_link search, :automation_script_name, "Name", {}, {:remote => true}
    %th=sort_link search, :state, {}, {:remote => true}
    %th Slave
    %th=sort_link search, :automation_script_owner_email, "Owner", {}, {:remote => true}
    %th=sort_link search, :automation_script_version, "Version", {}, {:remote => true}
    %th=sort_link search, :start_time, {}, {:remote => true}
    %th=sort_link search, :end_time, {}, {:remote => true}
    %th=sort_link search, :triage_result, {}, {:remote => true}
    %th Rerun/Stop

  - if automation_script_results.nil? or automation_script_results.count == 0
    %tr
      %td{:colspan => "9"}
        %h4 No data
  - else
    -automation_script_results.each do |asr|
      %tr
        %td
          - icon_name = asr.result
          - icon_name = asr.state if asr.state == "stopping"
          %img.ui-icon{:src => asset_path("#{icon_name}.png")}
          - asr_name = asr.name
          - if asr_name and asr_name.length >= 30
            - asr_name = asr_name.slice(0,30).concat("...")
          %b= link_to "#{asr_name}", test_round_automation_script_result_path(test_round, asr), :remote => true, :title => asr.name
        %td= asr.state
        %td
          -sa = asr.slave_assignments.last
          -if sa && sa.slave
            = link_to "#{sa.slave.name}", slave_path(sa.slave)
          -else
            No slave yet
        %td= asr.automation_script.owner.display_name
        %td= asr.automation_script.version
        %td= in_time_zone(asr.start_time)
        %td= in_time_zone(asr.end_time)
        %td
          - if asr.end? && asr.result!="pass" && asr.triage_result == "N/A" && can?(:update, AutomationScriptResult, {:project_id => project.id}) 
            = select_tag "triage_result", options_for_select({"N/A" => "N/A", "Script Error" => "Script Error", "Product Error" => "Product Error","Environment Error" => "Environment Error"}, asr.triage_result), :id => asr.id, :class => "triage-result"
          - else
            = asr.triage_result
        %td
          - if asr.result != "pass" && asr.result != "pending" && asr.triage_result == "N/A" && can?(:update, AutomationScriptResult, {:project_id => project.id}) 
            %input.btn.primary.rerun_btn{:type => "button", :value => "Rerun", "remote-data" => "/automation_script_results/#{asr.id}/rerun"}
          - if asr.result == "pending" && asr.state != "scheduling" && can?(:update, AutomationScriptResult, {:project_id => project.id})
            - if asr.state == "stopping"
              %input{:type => "button", :value => "Stopping", "remote-data" => "/automation_script_results/#{asr.id}/stop", :class => "btn primary rerun_btn disabled", :disabled => "disabled"}
            - else
              %input{:type => "button", :value => "Stop", "remote-data" => "/automation_script_results/#{asr.id}/stop", :class => "btn primary rerun_btn"}

= paginate automation_script_results

:javascript
  $(function(){
    
    $("input.rerun_btn:not(:disabled)").click(function(){
      $(this).addClass("disabled");
      $(this).disabled = true;
      $.ajax({url: $(this).attr("remote-data")}).success(function(data) {
        location.reload();
      })
    });

    $(".triage-result").change(function(){
      var triage_result = $("option:selected",this).text();
      var id = $(this).attr("id");
      var url = "/update_automation_script_result_triagge_result?id="+id+"&triage_result="+triage_result;
      var ele = $(this);
      $.ajax({url:url,dataType:"json"}).success(function(data) {
        if (data.result == "failed") {
          alert("Updating triage result failed, something is wrong with the server. Please try again later.");
        } else{
          $("input[remote-data='/automation_script_results/"+id+"/rerun']").remove();
          ele.parent().parent().children().first().children("img").attr("src","/assets/"+data.asr_result+".png");
          $("img.big-icon").attr("src","/assets/"+data.tr_result+".png"); ele.parent().html(triage_result);
        }
      });
    });
  });
