- left_titles = ['Result:', 'Start Time:', 'End Time:', 'Duration:', 'Triage Result:']
- triage = nil
- if @automation_script_result.end? && @automation_script_result.result!="pass" && @automation_script_result.triage_result == "N/A" && can?(:update, AutomationScriptResult, {:project_id => @automation_script_result.test_round.project.id})
  - triage = select_tag "triage_result", options_for_select({"N/A" => "N/A", "Script Error" => "Script Error", "Product Error" => "Product Error"}, @automation_script_result.triage_result), :id => @automation_script_result.id, :class => "triage-result"
- else
  - triage = @automation_script_result.triage_result
- left_values = [@automation_script_result.result, in_time_zone(@automation_script_result.start_time), in_time_zone(@automation_script_result.end_time), @automation_script_result.duration.nil? ? "N/A" : ChronicDuration.output(@automation_script_result.duration), triage]
- right_titles = ['Pass Count:', 'Failed Count:', 'Warning Count:', 'Not Run Count:']
- right_values = [@automation_script_result.pass, @automation_script_result.failed, @automation_script_result.warning, @automation_script_result.not_run]
= render :partial => "partial/brief_info", :locals => {:left_titles => left_titles, :left_values => left_values, :right_titles => right_titles, :right_values => right_values}
= link_to "View", test_round_automation_script_result_show_logs_path(@automation_script_result.test_round, @automation_script_result), :class => "btn primary"  
- asr =  @automation_script_result
- project = @automation_script_result.test_round.project
- if asr.result != "pass" && asr.result != "pending" && asr.triage_result == "N/A" && can?(:update, AutomationScriptResult, {:project_id => project.id}) 
  %input.btn.primary.rerun_btn{:type => "button", :value => "Rerun", "remote-data" => "/automation_script_results/#{asr.id}/rerun"}
- if asr.result == "pending" && asr.state != "scheduling" && can?(:update, AutomationScriptResult, {:project_id => project.id})
  - if asr.state == "stopping"
    %input{:type => "button", :value => "Stopping", "remote-data" => "/automation_script_results/#{asr.id}/stop", :class => "btn primary rerun_btn disabled", :disabled => "disabled"}
  - else
    %input{:type => "button", :value => "Stop", "remote-data" => "/automation_script_results/#{asr.id}/stop", :class => "btn primary rerun_btn"}

:javascript
  $(function(){
   
    $("input.rerun_btn:not(:disabled)").click(function(){
      $(this).addClass("disabled");
      $(this).disabled = true;
      $.ajax({url: $(this).attr("remote-data")}).success(function(data) {
        location.reload();
      })
    });
  
    $(".triage-result").change(function(){
      var triage_result = $("option:selected",this).text();
      var id = $(this).attr("id");
      var url = "/update_automation_script_result_triagge_result?id="+id+"&triage_result="+triage_result;
      var ele = $(this);
      $.ajax({url:url,dataType:"json"}).success(function(data) {
        if (data.result == "failed") {
          alert("Updating triage result failed, something is wrong with the server. Please try again later.");
        } else {
          $("img.big-icon").attr("src","/assets/"+data.asr_result+".png"); ele.parent().html(triage_result);
        }
      });
    });
  });
